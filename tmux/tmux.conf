# set mouse control
set -g mode-mouse on
setw -g mouse-select-window on
setw -g mouse-select-pane on
set -g mouse-resize-pane on

# copy and paster
set-option -g default-command "reattach-to-user-namespace -l zsh"

# look good
set -g default-terminal "screen-256color"

# make delay minimal
# set escape-time 1
set -sg escape-time 0

# shortcut for reloading config
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# better pane splitting
bind | split-window -h
bind - split-window -v


# visual stuff
set -g status-fg white
set -g status-bg black

setw -g window-status-fg white
setw -g window-status-bg default
setw -g window-status-attr dim
setw -g window-status-current-fg black
setw -g window-status-current-bg white
setw -g window-status-current-attr bright

set -g message-fg white
set -g message-bg black
set -g message-attr bright

set -g status-left-length 10
set -g status-left ""
set -g status-right ""
set-option -g status-utf8 on
set -g status-interval 60

set -g status-justify left
setw -g monitor-activity on
set -g visual-activity on

# http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits
# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# this will renumber windows automatically when one gets deleted
set-option -g renumber-windows on


